import streamlit as st
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞ JDoodle API
JDoodle_CLIENT_ID = "8f58f27348655b54abb39b54453bf0ab"
JDoodle_CLIENT_SECRET = "47402aab70bc0f0247ae39d30a0c58370d86d69038d46f5e1b5d1991ae4d34bf"

# Streamlit UI
st.title("Prolog Executor with JDoodle API")

st.markdown("### 1. –í—ä–≤–µ–¥–∏ Prolog –¥–µ—Ñ–∏–Ω–∏—Ü–∏–∏ (–ø—Ä–∞–≤–∏–ª–∞ –∏ —Ñ–∞–∫—Ç–∏):")
definitions = st.text_area("–ü—Ä–∏–º–µ—Ä: my_member(X, [X|_]).\nmy_member(X, [_|T]) :- my_member(X, T).", height=150)

st.markdown("### 2. –í—ä–≤–µ–¥–∏ Prolog –∑–∞—è–≤–∫–∞ (query):")
query = st.text_input("–ü—Ä–∏–º–µ—Ä: my_member(2, [1,2,3]).")

if st.button("–ò–∑–ø—ä–ª–Ω–∏"):
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∏–∑–≥—Ä–∞–∂–¥–∞–Ω–µ –Ω–∞ Prolog –∫–æ–¥ —Å main
    full_code = f""":- initialization(main).
{definitions}

main :- {query}, write('true'); write('false')."""

    # –î–∞–Ω–Ω–∏ –∑–∞ –∑–∞—è–≤–∫–∞—Ç–∞ –∫—ä–º JDoodle
    payload = {
        "clientId": JDoodle_CLIENT_ID,
        "clientSecret": JDoodle_CLIENT_SECRET,
        "script": full_code,
        "language": "prolog",
        "versionIndex": "0"
    }

    # –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞
    response = requests.post("https://api.jdoodle.com/v1/execute", json=payload)
    result = response.json()

    # –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
    st.markdown("### üßæ –†–µ–∑—É–ª—Ç–∞—Ç:")
    st.code(result.get("output", "–ù—è–º–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç"))
